"use strict";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_unsupportedIterableToArray(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}function _iterableToArrayLimit(b,c){var d=null==b?null:"undefined"!=typeof Symbol&&b[Symbol.iterator]||b["@@iterator"];if(null!=d){var g,h,j,k,l=[],a=!0,m=!1;try{if(j=(d=d.call(b)).next,0===c){if(Object(d)!==d)return;a=!1}else for(;!(a=(g=j.call(d)).done)&&(l.push(g.value),l.length!==c);a=!0);}catch(a){m=!0,h=a}finally{try{if(!a&&null!=d.return&&(k=d.return(),Object(k)!==k))return}finally{if(m)throw h}}return l}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var toBreadErrorFactory=require("./toBreadErrorFactory");function destroyFactory(a){var b=a.softDelete,c=a.customLabels,d=c.docs,e=c.acknowledged,f=c.deletedCount,g=function(a){var b,c=_slicedToArray(a,2),g=c[0],h=c[1];return{[d]:h,[e]:null!==(b=g.acknowledged)&&void 0!==b?b:!!g.ok,[f]:g.deletedCount}},h=toBreadErrorFactory({[d]:[],[e]:!1,[f]:0});return function(a){var c=this,d=a.bulk,e=a.query,f=d?"deleteMany":"deleteOne",i=b?"findDeleted":"find",j=b?{$and:[e,{deleted:{$eq:!0}}]}:e;return this[i](j,{_id:1}).then(function mergeDestroyAndDocs(a){return Promise.all([c[f](j).orFail(),Promise.resolve(a)])}).then(g).catch(h)}}module.exports=destroyFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0b0JyZWFkRXJyb3JGYWN0b3J5IiwicmVxdWlyZSIsImRlc3Ryb3lGYWN0b3J5IiwicGx1Z2luT3B0aW9ucyIsInNvZnREZWxldGUiLCJjIiwiY3VzdG9tTGFiZWxzIiwiZG9jcyIsImFja25vd2xlZGdlZCIsImRlbGV0ZWRDb3VudCIsInRvQnJlYWRSZXN1bHQiLCJhIiwiYiIsIl9zbGljZWRUb0FycmF5IiwicmVzdWx0IiwiX2RvY3MiLCJvayIsInRvQnJlYWRFcnJvciIsIm9wdGlvbnMiLCJidWxrIiwicXVlcnkiLCJkZXN0cm95UXVlcnlNZXRob2QiLCJmaW5kUXVlcnlNZXRob2QiLCJfcXVlcnkiLCIkYW5kIiwiZGVsZXRlZCIsIiRlcSIsIl9pZCIsInRoZW4iLCJtZXJnZURlc3Ryb3lBbmREb2NzIiwiUHJvbWlzZSIsImFsbCIsIm9yRmFpbCIsInJlc29sdmUiLCJjYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvZmFjdG9yaWVzL2Rlc3Ryb3lGYWN0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XG5pbXBvcnQgeyBTb2Z0RGVsZXRlTW9kZWwgfSBmcm9tIFwibW9uZ29vc2UtZGVsZXRlXCI7XG5pbXBvcnQgeyBNb25nb29zZUJyZWFkRGVzdHJveU9wdGlvbnMsIE1vbmdvb3NlQnJlYWRPcHRpb25zIH0gZnJvbSBcIi4uLy4uL3R5cGVzXCI7XG5cbmNvbnN0IHRvQnJlYWRFcnJvckZhY3RvcnkgPSByZXF1aXJlKFwiLi90b0JyZWFkRXJyb3JGYWN0b3J5XCIpO1xuXG4vKipcbiAqIEZhY3RvcnkgZnVuY3Rpb24gdG8gY3JlYXRlIE1vZGVsLmRlc3Ryb3koKSBtZXRob2RcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi9pbmRleCcpLk1vbmdvb3NlQnJlYWRPcHRpb25zfSBwbHVnaW5PcHRpb25zIENvbmZpZyBvZiBtb25nb29zZS1icmVhZCBwbHVnaW5cbiAqL1xuZnVuY3Rpb24gZGVzdHJveUZhY3RvcnkocGx1Z2luT3B0aW9uczogTW9uZ29vc2VCcmVhZE9wdGlvbnMpIHtcblx0Y29uc3QgeyBzb2Z0RGVsZXRlIH0gPSBwbHVnaW5PcHRpb25zO1xuXHRjb25zdCB7IGRvY3MsIGFja25vd2xlZGdlZCwgZGVsZXRlZENvdW50IH0gPSBwbHVnaW5PcHRpb25zLmN1c3RvbUxhYmVscztcblx0Y29uc3QgdG9CcmVhZFJlc3VsdCA9IChbcmVzdWx0LCBfZG9jc106IFthbnksIGFueV0pID0+ICh7XG5cdFx0W2RvY3NdOiBfZG9jcyxcblx0XHRbYWNrbm93bGVkZ2VkXTogcmVzdWx0LmFja25vd2xlZGdlZCA/PyAhIXJlc3VsdC5vayxcblx0XHRbZGVsZXRlZENvdW50XTogcmVzdWx0LmRlbGV0ZWRDb3VudCxcblx0fSk7XG5cdGNvbnN0IHRvQnJlYWRFcnJvciA9IHRvQnJlYWRFcnJvckZhY3Rvcnkoe1xuXHRcdFtkb2NzXTogW10sXG5cdFx0W2Fja25vd2xlZGdlZF06IGZhbHNlLFxuXHRcdFtkZWxldGVkQ291bnRdOiAwLFxuXHR9KTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gZGVzdHJveSh0aGlzOiBNb2RlbDxhbnk+IHwgU29mdERlbGV0ZU1vZGVsPGFueT4sIG9wdGlvbnM6IE1vbmdvb3NlQnJlYWREZXN0cm95T3B0aW9ucykge1xuXHRcdGNvbnN0IHsgYnVsaywgcXVlcnkgfSA9IG9wdGlvbnM7XG5cdFx0Y29uc3QgZGVzdHJveVF1ZXJ5TWV0aG9kID0gYnVsayA/IFwiZGVsZXRlTWFueVwiIDogXCJkZWxldGVPbmVcIjtcblx0XHRjb25zdCBmaW5kUXVlcnlNZXRob2QgPSBzb2Z0RGVsZXRlID8gXCJmaW5kRGVsZXRlZFwiIDogXCJmaW5kXCI7XG5cdFx0Y29uc3QgX3F1ZXJ5ID0gc29mdERlbGV0ZSA/IHsgJGFuZDogW3F1ZXJ5LCB7IGRlbGV0ZWQ6IHsgJGVxOiB0cnVlIH0gfV0gfSA6IHF1ZXJ5O1xuXG5cdFx0Y29uc3QgbWVyZ2VEZXN0cm95QW5kRG9jcyA9IChfZG9jczogYW55KSA9PlxuXHRcdFx0UHJvbWlzZS5hbGwoW1xuXHRcdFx0XHQvLyBAdHMtaWdub3JlXG5cdFx0XHRcdHRoaXNbZGVzdHJveVF1ZXJ5TWV0aG9kXShfcXVlcnkpLm9yRmFpbCgpLFxuXHRcdFx0XHRQcm9taXNlLnJlc29sdmUoX2RvY3MpLFxuXHRcdFx0XSk7XG5cblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0cmV0dXJuIHRoaXNbZmluZFF1ZXJ5TWV0aG9kXShfcXVlcnksIHsgX2lkOiAxIH0pXG4gICAgICAudGhlbihtZXJnZURlc3Ryb3lBbmREb2NzKVxuICAgICAgLnRoZW4odG9CcmVhZFJlc3VsdClcbiAgICAgIC5jYXRjaCh0b0JyZWFkRXJyb3IpO1xuXHR9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlc3Ryb3lGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiNHVDQUlBLEdBQU0sQ0FBQUEsbUJBQW1CLENBQUdDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQU01RCxRQUFTLENBQUFDLGNBQWNBLENBQUNDLENBQW1DLENBQUUsSUFDcEQsQ0FBQUMsQ0FBVSxDQUFLRCxDQUFhLENBQTVCQyxVQUFVLENBQUFDLENBQUEsQ0FDMkJGLENBQWEsQ0FBQ0csWUFBWSxDQUEvREMsQ0FBSSxDQUFBRixDQUFBLENBQUpFLElBQUksQ0FBRUMsQ0FBWSxDQUFBSCxDQUFBLENBQVpHLFlBQVksQ0FBRUMsQ0FBWSxDQUFBSixDQUFBLENBQVpJLFlBQVksQ0FDbENDLENBQWEsQ0FBRyxRQUFBQSxDQUFBQyxDQUFBLE1BQUFDLENBQUEsQ0FBQVAsQ0FBQSxDQUFBUSxjQUFBLENBQUFGLENBQUEsSUFBRUcsQ0FBTSxDQUFBVCxDQUFBLElBQUVVLENBQUssQ0FBQVYsQ0FBQSxVQUFtQixDQUN2RCxDQUFDRSxDQUFJLEVBQUdRLENBQUssQ0FDYixDQUFDUCxDQUFZLFVBQUFJLENBQUEsQ0FBR0UsQ0FBTSxDQUFDTixZQUFZLFlBQUFJLENBQUEsQ0FBQUEsQ0FBQSxDQUFJLENBQUMsQ0FBQ0UsQ0FBTSxDQUFDRSxFQUFFLENBQ2xELENBQUNQLENBQVksRUFBR0ssQ0FBTSxDQUFDTCxZQUN4QixDQUFDLENBQUMsQ0FDSVEsQ0FBWSxDQUFHakIsbUJBQW1CLENBQUMsQ0FDeEMsQ0FBQ08sQ0FBSSxFQUFHLEVBQUUsQ0FDVixDQUFDQyxDQUFZLElBQVEsQ0FDckIsQ0FBQ0MsQ0FBWSxFQUFHLENBQ2pCLENBQUMsQ0FBQyxDQUVGLE1BQU8sVUFBMERTLENBQW9DLENBQUUsS0FBQWIsQ0FBQSxNQUM5RmMsQ0FBSSxDQUFZRCxDQUFPLENBQXZCQyxJQUFJLENBQUVDLENBQUssQ0FBS0YsQ0FBTyxDQUFqQkUsS0FBSyxDQUNiQyxDQUFrQixDQUFHRixDQUFJLENBQUcsWUFBWSxDQUFHLFdBQVcsQ0FDdERHLENBQWUsQ0FBR2xCLENBQVUsQ0FBRyxhQUFhLENBQUcsTUFBTSxDQUNyRG1CLENBQU0sQ0FBR25CLENBQVUsQ0FBRyxDQUFFb0IsSUFBSSxDQUFFLENBQUNKLENBQUssQ0FBRSxDQUFFSyxPQUFPLENBQUUsQ0FBRUMsR0FBRyxHQUFPLENBQUUsQ0FBQyxDQUFFLENBQUMsQ0FBR04sQ0FBSyxDQVVqRixNQUFPLEtBQUksQ0FBQ0UsQ0FBZSxDQUFDLENBQUNDLENBQU0sQ0FBRSxDQUFFSSxHQUFHLENBQUUsQ0FBRSxDQUFDLENBQUMsQ0FDM0NDLElBQUksQ0FUbUIsUUFBdEIsQ0FBQUMsbUJBQW1CQSxDQUFJZCxDQUFVLFFBQ3RDLENBQUFlLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBRVgxQixDQUFJLENBQUNnQixDQUFrQixDQUFDLENBQUNFLENBQU0sQ0FBQyxDQUFDUyxNQUFNLENBQUMsQ0FBQyxDQUN6Q0YsT0FBTyxDQUFDRyxPQUFPLENBQUNsQixDQUFLLENBQUMsQ0FDdEIsQ0FBQyxDQUkwQixDQUFDLENBQ3pCYSxJQUFJLENBQUNsQixDQUFhLENBQUMsQ0FDbkJ3QixLQUFLLENBQUNqQixDQUFZLENBQ3hCLENBQ0QsQ0FFQWtCLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHbEMsY0FBYyIsImlnbm9yZUxpc3QiOltdfQ==