"use strict";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_unsupportedIterableToArray(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}function _iterableToArrayLimit(b,c){var d=null==b?null:"undefined"!=typeof Symbol&&b[Symbol.iterator]||b["@@iterator"];if(null!=d){var g,h,j,k,l=[],a=!0,m=!1;try{if(j=(d=d.call(b)).next,0===c){if(Object(d)!==d)return;a=!1}else for(;!(a=(g=j.call(d)).done)&&(l.push(g.value),l.length!==c);a=!0);}catch(a){m=!0,h=a}finally{try{if(!a&&null!=d.return&&(k=d.return(),Object(k)!==k))return}finally{if(m)throw h}}return l}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var toBreadErrorFactory=require("./toBreadErrorFactory");function softDeleteFactory(a){var b=a.softDeleteOptions.deletedBy,c=a.customLabels,d=c.docs,e=c.acknowledged,f=c.modifiedCount,g=function(a){var b,c,g=_slicedToArray(a,2),h=g[0],i=g[1];return{[d]:i,[e]:null===(b=h.acknowledged)||void 0===b||b,[f]:null!==(c=h.modifiedCount)&&void 0!==c?c:h.nModified}},h=toBreadErrorFactory({[d]:[],[e]:!1,[f]:0});return function(a){var c=this,d=a.userId,e=a.query,f=this.findWithDeleted(e,{_id:1});return f.then(function mergeSoftDeleteAndDocs(a){return Promise.all([b&&d?c.delete(e,d).orFail():c.delete(e).orFail(),Promise.resolve(a)])}).then(g).catch(h)}}module.exports=softDeleteFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0b0JyZWFkRXJyb3JGYWN0b3J5IiwicmVxdWlyZSIsInNvZnREZWxldGVGYWN0b3J5IiwicGx1Z2luT3B0aW9ucyIsImRlbGV0ZWRCeSIsInNvZnREZWxldGVPcHRpb25zIiwiYyIsImN1c3RvbUxhYmVscyIsImRvY3MiLCJhY2tub3dsZWRnZWQiLCJtb2RpZmllZENvdW50IiwidG9CcmVhZFJlc3VsdCIsImEiLCJiIiwiZyIsIl9zbGljZWRUb0FycmF5IiwicmVzdWx0IiwiX2RvY3MiLCJuTW9kaWZpZWQiLCJ0b0JyZWFkRXJyb3IiLCJvcHRpb25zIiwidXNlcklkIiwicXVlcnkiLCJmaW5kUXVlcnkiLCJmaW5kV2l0aERlbGV0ZWQiLCJfaWQiLCJ0aGVuIiwibWVyZ2VTb2Z0RGVsZXRlQW5kRG9jcyIsIlByb21pc2UiLCJhbGwiLCJkZWxldGUiLCJvckZhaWwiLCJyZXNvbHZlIiwiY2F0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2ZhY3Rvcmllcy9zb2Z0RGVsZXRlRmFjdG9yeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2RlbCwgUXVlcnkgfSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCB7IE1vbmdvb3NlQnJlYWRPcHRpb25zLCBNb25nb29zZUJyZWFkU29mdERlbGV0ZU9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcbmltcG9ydCB7IFNvZnREZWxldGVNb2RlbCB9IGZyb20gXCJtb25nb29zZS1kZWxldGVcIjtcblxuY29uc3QgdG9CcmVhZEVycm9yRmFjdG9yeSA9IHJlcXVpcmUoXCIuL3RvQnJlYWRFcnJvckZhY3RvcnlcIik7XG5cbi8qKlxuICogRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgTW9kZWwuc29mdERlbGV0ZSgpIG1ldGhvZFxuICogQHBhcmFtIHtpbXBvcnQoJy4uL2luZGV4JykuTW9uZ29vc2VCcmVhZE9wdGlvbnN9IHBsdWdpbk9wdGlvbnMgQ29uZmlnIG9mIG1vbmdvb3NlLWJyZWFkIHBsdWdpblxuICovXG5mdW5jdGlvbiBzb2Z0RGVsZXRlRmFjdG9yeShwbHVnaW5PcHRpb25zOiBNb25nb29zZUJyZWFkT3B0aW9ucykge1xuXHRjb25zdCB7IGRlbGV0ZWRCeSB9ID0gcGx1Z2luT3B0aW9ucy5zb2Z0RGVsZXRlT3B0aW9ucztcblx0Y29uc3QgeyBkb2NzLCBhY2tub3dsZWRnZWQsIG1vZGlmaWVkQ291bnQgfSA9IHBsdWdpbk9wdGlvbnMuY3VzdG9tTGFiZWxzO1xuXHRjb25zdCB0b0JyZWFkUmVzdWx0ID0gKFtyZXN1bHQsIF9kb2NzXTogW2FueSwgYW55W11dKSA9PiAoe1xuXHRcdFtkb2NzXTogX2RvY3MsXG5cdFx0W2Fja25vd2xlZGdlZF06IHJlc3VsdC5hY2tub3dsZWRnZWQgPz8gdHJ1ZSxcblx0XHRbbW9kaWZpZWRDb3VudF06IHJlc3VsdC5tb2RpZmllZENvdW50ID8/IHJlc3VsdC5uTW9kaWZpZWQsXG5cdH0pO1xuXHRjb25zdCB0b0JyZWFkRXJyb3IgPSB0b0JyZWFkRXJyb3JGYWN0b3J5KHtcblx0XHRbZG9jc106IFtdLFxuXHRcdFthY2tub3dsZWRnZWRdOiBmYWxzZSxcblx0XHRbbW9kaWZpZWRDb3VudF06IDAsXG5cdH0pO1xuXG5cdHJldHVybiBmdW5jdGlvbiBzb2Z0RGVsZXRlKHRoaXM6IE1vZGVsPGFueT4gJiBTb2Z0RGVsZXRlTW9kZWw8YW55Piwgb3B0aW9uczpNb25nb29zZUJyZWFkU29mdERlbGV0ZU9wdGlvbnMpIHtcblx0XHRjb25zdCB7IHVzZXJJZCwgcXVlcnkgfSA9IG9wdGlvbnM7XG5cblx0XHRjb25zdCBtZXJnZVNvZnREZWxldGVBbmREb2NzID0gKF9kb2NzOiBhbnkpID0+XG5cdFx0XHRQcm9taXNlLmFsbChbXG5cdFx0XHRcdGRlbGV0ZWRCeSAmJiB1c2VySWQgPyB0aGlzLmRlbGV0ZShxdWVyeSwgdXNlcklkKS5vckZhaWwoKSA6IHRoaXMuZGVsZXRlKHF1ZXJ5KS5vckZhaWwoKSxcblx0XHRcdFx0UHJvbWlzZS5yZXNvbHZlKF9kb2NzKSxcblx0XHRcdF0pO1xuXG5cdFx0Y29uc3QgZmluZFF1ZXJ5ID0gdGhpcy5maW5kV2l0aERlbGV0ZWQocXVlcnksIHsgX2lkOiAxIH0pIGFzIFF1ZXJ5PGFueSwgYW55PjtcblxuXHRcdHJldHVybiBmaW5kUXVlcnkudGhlbihtZXJnZVNvZnREZWxldGVBbmREb2NzKS50aGVuKHRvQnJlYWRSZXN1bHQpLmNhdGNoKHRvQnJlYWRFcnJvcik7XG5cdH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc29mdERlbGV0ZUZhY3Rvcnk7XG4iXSwibWFwcGluZ3MiOiI0dUNBSUEsR0FBTSxDQUFBQSxtQkFBbUIsQ0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBTTVELFFBQVMsQ0FBQUMsaUJBQWlCQSxDQUFDQyxDQUFtQyxDQUFFLElBQ3ZELENBQUFDLENBQVMsQ0FBS0QsQ0FBYSxDQUFDRSxpQkFBaUIsQ0FBN0NELFNBQVMsQ0FBQUUsQ0FBQSxDQUM2QkgsQ0FBYSxDQUFDSSxZQUFZLENBQWhFQyxDQUFJLENBQUFGLENBQUEsQ0FBSkUsSUFBSSxDQUFFQyxDQUFZLENBQUFILENBQUEsQ0FBWkcsWUFBWSxDQUFFQyxDQUFhLENBQUFKLENBQUEsQ0FBYkksYUFBYSxDQUNuQ0MsQ0FBYSxDQUFHLFFBQUFBLENBQUFDLENBQUEsTUFBQUMsQ0FBQSxDQUFBUCxDQUFBLENBQUFRLENBQUEsQ0FBQUMsY0FBQSxDQUFBSCxDQUFBLElBQUVJLENBQU0sQ0FBQUYsQ0FBQSxJQUFFRyxDQUFLLENBQUFILENBQUEsVUFBcUIsQ0FDekQsQ0FBQ04sQ0FBSSxFQUFHUyxDQUFLLENBQ2IsQ0FBQ1IsQ0FBWSxVQUFBSSxDQUFBLENBQUdHLENBQU0sQ0FBQ1AsWUFBWSxZQUFBSSxDQUFBLEVBQUFBLENBQVEsQ0FDM0MsQ0FBQ0gsQ0FBYSxVQUFBSixDQUFBLENBQUdVLENBQU0sQ0FBQ04sYUFBYSxZQUFBSixDQUFBLENBQUFBLENBQUEsQ0FBSVUsQ0FBTSxDQUFDRSxTQUNqRCxDQUFDLENBQUMsQ0FDSUMsQ0FBWSxDQUFHbkIsbUJBQW1CLENBQUMsQ0FDeEMsQ0FBQ1EsQ0FBSSxFQUFHLEVBQUUsQ0FDVixDQUFDQyxDQUFZLElBQVEsQ0FDckIsQ0FBQ0MsQ0FBYSxFQUFHLENBQ2xCLENBQUMsQ0FBQyxDQUVGLE1BQU8sVUFBNkRVLENBQXNDLENBQUUsS0FBQWQsQ0FBQSxNQUNuR2UsQ0FBTSxDQUFZRCxDQUFPLENBQXpCQyxNQUFNLENBQUVDLENBQUssQ0FBS0YsQ0FBTyxDQUFqQkUsS0FBSyxDQVFmQyxDQUFTLENBQUcsSUFBSSxDQUFDQyxlQUFlLENBQUNGLENBQUssQ0FBRSxDQUFFRyxHQUFHLENBQUUsQ0FBRSxDQUFDLENBQW9CLENBRTVFLE1BQU8sQ0FBQUYsQ0FBUyxDQUFDRyxJQUFJLENBUlUsUUFBekIsQ0FBQUMsc0JBQXNCQSxDQUFJVixDQUFVLFFBQ3pDLENBQUFXLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQ1h6QixDQUFTLEVBQUlpQixDQUFNLENBQUdmLENBQUksQ0FBQ3dCLE1BQU0sQ0FBQ1IsQ0FBSyxDQUFFRCxDQUFNLENBQUMsQ0FBQ1UsTUFBTSxDQUFDLENBQUMsQ0FBR3pCLENBQUksQ0FBQ3dCLE1BQU0sQ0FBQ1IsQ0FBSyxDQUFDLENBQUNTLE1BQU0sQ0FBQyxDQUFDLENBQ3ZGSCxPQUFPLENBQUNJLE9BQU8sQ0FBQ2YsQ0FBSyxDQUFDLENBQ3RCLENBQUMsQ0FJeUMsQ0FBQyxDQUFDUyxJQUFJLENBQUNmLENBQWEsQ0FBQyxDQUFDc0IsS0FBSyxDQUFDZCxDQUFZLENBQ3JGLENBQ0QsQ0FFQWUsTUFBTSxDQUFDQyxPQUFPLENBQUdqQyxpQkFBaUIiLCJpZ25vcmVMaXN0IjpbXX0=