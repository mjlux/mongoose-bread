"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_unsupportedIterableToArray(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}function _iterableToArrayLimit(b,c){var d=null==b?null:"undefined"!=typeof Symbol&&b[Symbol.iterator]||b["@@iterator"];if(null!=d){var g,h,j,k,l=[],a=!0,m=!1;try{if(j=(d=d.call(b)).next,0===c){if(Object(d)!==d)return;a=!1}else for(;!(a=(g=j.call(d)).done)&&(l.push(g.value),l.length!==c);a=!0);}catch(a){m=!0,h=a}finally{try{if(!a&&null!=d.return&&(k=d.return(),Object(k)!==k))return}finally{if(m)throw h}}return l}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var parseLeanFactory=require("./parseLeanFactory"),toBreadErrorFactory=require("./toBreadErrorFactory");function addFactory(a){var b=a.customLabels,c=b.docs,d=b.acknowledged,e=b.createdCount,f=function(a){var b=_slicedToArray(a,2),f=b[0],g=b[1];return{[c]:g,[d]:f.acknowledged,[e]:f.createdCount}},g=toBreadErrorFactory({[c]:[],[d]:!1,[e]:0});return function(a){var b=this,c=a.bulk,d=a.payload,e=a.projection,h=a.populate,i=a.select,j=a.sort,k=a.lean,l=a.limit,m=parseLeanFactory(a);return this.create(d).then(function mergeCreateAndCount(a){var d=c?{_id:{$in:_toConsumableArray(a.map(function(a){return a._id}))}}:{_id:null===a||void 0===a?void 0:a._id};return Promise.all([Promise.resolve({acknowledged:!0,createdCount:c?a.length:1}),b.find(d,e).populate(h).select(i).sort(j).lean(k).limit(l).orFail().then(m)])}).then(f).catch(g)}}module.exports=addFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwYXJzZUxlYW5GYWN0b3J5IiwicmVxdWlyZSIsInRvQnJlYWRFcnJvckZhY3RvcnkiLCJhZGRGYWN0b3J5IiwicGx1Z2luT3B0aW9ucyIsImIiLCJjdXN0b21MYWJlbHMiLCJkb2NzIiwiYWNrbm93bGVkZ2VkIiwiY3JlYXRlZENvdW50IiwidG9CcmVhZFJlc3VsdCIsImEiLCJfc2xpY2VkVG9BcnJheSIsInJlc3VsdCIsIl9kb2NzIiwidG9CcmVhZEVycm9yIiwib3B0aW9ucyIsImJ1bGsiLCJwYXlsb2FkIiwicHJvamVjdGlvbiIsInBvcHVsYXRlIiwic2VsZWN0Iiwic29ydCIsImxlYW4iLCJsaW1pdCIsInBhcnNlTGVhbiIsImNyZWF0ZSIsInRoZW4iLCJtZXJnZUNyZWF0ZUFuZENvdW50IiwicXVlcnkiLCJfaWQiLCIkaW4iLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJtYXAiLCJkIiwiUHJvbWlzZSIsImFsbCIsInJlc29sdmUiLCJsZW5ndGgiLCJmaW5kIiwib3JGYWlsIiwiY2F0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2ZhY3Rvcmllcy9hZGRGYWN0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XG5pbXBvcnQgeyBNb25nb29zZUJyZWFkQWRkT3B0aW9ucywgTW9uZ29vc2VCcmVhZE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vdHlwZXNcIjtcblxuY29uc3QgcGFyc2VMZWFuRmFjdG9yeSA9IHJlcXVpcmUoXCIuL3BhcnNlTGVhbkZhY3RvcnlcIik7XG5jb25zdCB0b0JyZWFkRXJyb3JGYWN0b3J5ID0gcmVxdWlyZShcIi4vdG9CcmVhZEVycm9yRmFjdG9yeVwiKTtcblxuZnVuY3Rpb24gYWRkRmFjdG9yeShwbHVnaW5PcHRpb25zOk1vbmdvb3NlQnJlYWRPcHRpb25zKSB7XG4gIGNvbnN0IHsgZG9jcywgYWNrbm93bGVkZ2VkLCBjcmVhdGVkQ291bnQgfSA9IHBsdWdpbk9wdGlvbnMuY3VzdG9tTGFiZWxzO1xuICBjb25zdCB0b0JyZWFkUmVzdWx0ID0gKFtyZXN1bHQsIF9kb2NzXSA6IFthbnksIGFueV0pID0+ICh7XG4gICAgW2RvY3NdOiBfZG9jcyxcbiAgICBbYWNrbm93bGVkZ2VkXTogcmVzdWx0LmFja25vd2xlZGdlZCxcbiAgICBbY3JlYXRlZENvdW50XTogcmVzdWx0LmNyZWF0ZWRDb3VudCxcbiAgfSk7XG4gIGNvbnN0IHRvQnJlYWRFcnJvciA9IHRvQnJlYWRFcnJvckZhY3Rvcnkoe1xuICAgIFtkb2NzXTogW10sXG4gICAgW2Fja25vd2xlZGdlZF06IGZhbHNlLFxuICAgIFtjcmVhdGVkQ291bnRdOiAwLFxuICB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24gYWRkKHRoaXM6TW9kZWw8YW55Piwgb3B0aW9uczpNb25nb29zZUJyZWFkQWRkT3B0aW9ucykge1xuICAgIGNvbnN0IHsgYnVsaywgcGF5bG9hZCwgcHJvamVjdGlvbiwgcG9wdWxhdGUsIHNlbGVjdCwgc29ydCwgbGVhbiwgbGltaXQgfSA9XG4gICAgICBvcHRpb25zO1xuICAgIGNvbnN0IHBhcnNlTGVhbiA9IHBhcnNlTGVhbkZhY3Rvcnkob3B0aW9ucyk7XG5cbiAgICBjb25zdCBtZXJnZUNyZWF0ZUFuZENvdW50ID0gKHJlc3VsdDphbnkpID0+IHtcbiAgICAgIGNvbnN0IHF1ZXJ5ID0gYnVsa1xuICAgICAgICA/IHsgX2lkOiB7ICRpbjogWy4uLnJlc3VsdC5tYXAoKGQ6YW55KSA9PiBkLl9pZCldIH0gfVxuICAgICAgICA6IHsgX2lkOiByZXN1bHQ/Ll9pZCB9O1xuXG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xuICAgICAgICBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgIGFja25vd2xlZGdlZDogdHJ1ZSxcbiAgICAgICAgICBjcmVhdGVkQ291bnQ6IGJ1bGsgPyByZXN1bHQubGVuZ3RoIDogMSxcbiAgICAgICAgfSksXG4gICAgICAgIHRoaXMuZmluZChxdWVyeSwgcHJvamVjdGlvbilcbiAgICAgICAgICAucG9wdWxhdGUocG9wdWxhdGUpXG4gICAgICAgICAgLnNlbGVjdChzZWxlY3QpXG4gICAgICAgICAgLnNvcnQoc29ydClcbiAgICAgICAgICAubGVhbihsZWFuKVxuICAgICAgICAgIC5saW1pdChsaW1pdClcbiAgICAgICAgICAub3JGYWlsKClcbiAgICAgICAgICAudGhlbihwYXJzZUxlYW4pLFxuICAgICAgXSk7XG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLmNyZWF0ZShwYXlsb2FkKVxuICAgICAgLnRoZW4obWVyZ2VDcmVhdGVBbmRDb3VudClcbiAgICAgIC50aGVuKHRvQnJlYWRSZXN1bHQpXG4gICAgICAuY2F0Y2godG9CcmVhZEVycm9yKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhZGRGYWN0b3J5O1xuIl0sIm1hcHBpbmdzIjoiZ3dEQUdNLENBQUFBLGdCQUFnQixDQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FDaERDLG1CQUFtQixDQUFHRCxPQUFPLENBQUMsdUJBQXVCLENBQUMsQ0FFNUQsUUFBUyxDQUFBRSxVQUFVQSxDQUFDQyxDQUFrQyxDQUFFLEtBQUFDLENBQUEsQ0FDVEQsQ0FBYSxDQUFDRSxZQUFZLENBQS9EQyxDQUFJLENBQUFGLENBQUEsQ0FBSkUsSUFBSSxDQUFFQyxDQUFZLENBQUFILENBQUEsQ0FBWkcsWUFBWSxDQUFFQyxDQUFZLENBQUFKLENBQUEsQ0FBWkksWUFBWSxDQUNsQ0MsQ0FBYSxDQUFHLFFBQUFBLENBQUFDLENBQUEsTUFBQU4sQ0FBQSxDQUFBTyxjQUFBLENBQUFELENBQUEsSUFBRUUsQ0FBTSxDQUFBUixDQUFBLElBQUVTLENBQUssQ0FBQVQsQ0FBQSxVQUFvQixDQUN2RCxDQUFDRSxDQUFJLEVBQUdPLENBQUssQ0FDYixDQUFDTixDQUFZLEVBQUdLLENBQU0sQ0FBQ0wsWUFBWSxDQUNuQyxDQUFDQyxDQUFZLEVBQUdJLENBQU0sQ0FBQ0osWUFDekIsQ0FBQyxDQUFDLENBQ0lNLENBQVksQ0FBR2IsbUJBQW1CLENBQUMsQ0FDdkMsQ0FBQ0ssQ0FBSSxFQUFHLEVBQUUsQ0FDVixDQUFDQyxDQUFZLElBQVEsQ0FDckIsQ0FBQ0MsQ0FBWSxFQUFHLENBQ2xCLENBQUMsQ0FBQyxDQUVGLE1BQU8sVUFBOEJPLENBQStCLENBQUUsS0FBQVgsQ0FBQSxNQUM1RFksQ0FBSSxDQUNWRCxDQUFPLENBRERDLElBQUksQ0FBRUMsQ0FBTyxDQUNuQkYsQ0FBTyxDQURLRSxPQUFPLENBQUVDLENBQVUsQ0FDL0JILENBQU8sQ0FEY0csVUFBVSxDQUFFQyxDQUFRLENBQ3pDSixDQUFPLENBRDBCSSxRQUFRLENBQUVDLENBQU0sQ0FDakRMLENBQU8sQ0FEb0NLLE1BQU0sQ0FBRUMsQ0FBSSxDQUN2RE4sQ0FBTyxDQUQ0Q00sSUFBSSxDQUFFQyxDQUFJLENBQzdEUCxDQUFPLENBRGtETyxJQUFJLENBQUVDLENBQUssQ0FDcEVSLENBQU8sQ0FEd0RRLEtBQUssQ0FFaEVDLENBQVMsQ0FBR3pCLGdCQUFnQixDQUFDZ0IsQ0FBTyxDQUFDLENBdUIzQyxNQUFPLEtBQUksQ0FBQ1UsTUFBTSxDQUFDUixDQUFPLENBQUMsQ0FDeEJTLElBQUksQ0F0QnFCLFFBQXRCLENBQUFDLG1CQUFtQkEsQ0FBSWYsQ0FBVSxDQUFLLENBQzFDLEdBQU0sQ0FBQWdCLENBQUssQ0FBR1osQ0FBSSxDQUNkLENBQUVhLEdBQUcsQ0FBRSxDQUFFQyxHQUFHLENBQUFDLGtCQUFBLENBQU1uQixDQUFNLENBQUNvQixHQUFHLENBQUMsU0FBQ0MsQ0FBSyxRQUFLLENBQUFBLENBQUMsQ0FBQ0osR0FBRyxFQUFDLENBQUUsQ0FBRSxDQUFDLENBQ25ELENBQUVBLEdBQUcsUUFBRWpCLENBQU0sV0FBTkEsQ0FBTSxRQUFOQSxDQUFNLENBQUVpQixHQUFJLENBQUMsQ0FFeEIsTUFBTyxDQUFBSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUNqQkQsT0FBTyxDQUFDRSxPQUFPLENBQUMsQ0FDZDdCLFlBQVksR0FBTSxDQUNsQkMsWUFBWSxDQUFFUSxDQUFJLENBQUdKLENBQU0sQ0FBQ3lCLE1BQU0sQ0FBRyxDQUN2QyxDQUFDLENBQUMsQ0FDRmpDLENBQUksQ0FBQ2tDLElBQUksQ0FBQ1YsQ0FBSyxDQUFFVixDQUFVLENBQUMsQ0FDekJDLFFBQVEsQ0FBQ0EsQ0FBUSxDQUFDLENBQ2xCQyxNQUFNLENBQUNBLENBQU0sQ0FBQyxDQUNkQyxJQUFJLENBQUNBLENBQUksQ0FBQyxDQUNWQyxJQUFJLENBQUNBLENBQUksQ0FBQyxDQUNWQyxLQUFLLENBQUNBLENBQUssQ0FBQyxDQUNaZ0IsTUFBTSxDQUFDLENBQUMsQ0FDUmIsSUFBSSxDQUFDRixDQUFTLENBQUMsQ0FDbkIsQ0FDSCxDQUcyQixDQUFDLENBQ3pCRSxJQUFJLENBQUNqQixDQUFhLENBQUMsQ0FDbkIrQixLQUFLLENBQUMxQixDQUFZLENBQ3ZCLENBQ0YsQ0FFQTJCLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHeEMsVUFBVSIsImlnbm9yZUxpc3QiOltdfQ==