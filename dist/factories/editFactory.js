"use strict";function _slicedToArray(a,b){return _arrayWithHoles(a)||_iterableToArrayLimit(a,b)||_unsupportedIterableToArray(a,b)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}function _iterableToArrayLimit(b,c){var d=null==b?null:"undefined"!=typeof Symbol&&b[Symbol.iterator]||b["@@iterator"];if(null!=d){var g,h,j,k,l=[],a=!0,m=!1;try{if(j=(d=d.call(b)).next,0===c){if(Object(d)!==d)return;a=!1}else for(;!(a=(g=j.call(d)).done)&&(l.push(g.value),l.length!==c);a=!0);}catch(a){m=!0,h=a}finally{try{if(!a&&null!=d.return&&(k=d.return(),Object(k)!==k))return}finally{if(m)throw h}}return l}}function _arrayWithHoles(a){if(Array.isArray(a))return a}var parseLeanFactory=require("./parseLeanFactory"),toBreadErrorFactory=require("./toBreadErrorFactory");function editFactory(a){function b(a,b){var c=b.query,d=b.payload,e=b.projection,f=b.populate,g=b.select,h=b.sort,k=b.lean,l=b.limit,m=parseLeanFactory(b);return a.startSession().then(function updateWithSession(b){return b.startTransaction(),Promise.all([Promise.resolve(b),a.updateMany(c,d,{session:b})])}).then(function fetchDocs(b){var d=_slicedToArray(b,2),i=d[0],j=d[1];return Promise.all([Promise.resolve(i),Promise.resolve(j),a.find(c,e).session(i).populate(f).select(g).sort(h).lean(k).limit(l).orFail().then(m)])}).then(function commitTransaction(a){var b=_slicedToArray(a,3),c=b[0],d=b[1],e=b[2];return Promise.all([Promise.resolve(c),Promise.resolve(d),Promise.resolve(e),c.commitTransaction()])}).then(function endSession(a){var b=_slicedToArray(a,4),c=b[0],d=b[1],e=b[2],f=b[3];return c.endSession(),[d,e]}).then(i).catch(j)}function c(a,b){var c=b.query,d=b.payload,e=b.projection,f=b.populate,g=b.select,h=b.sort,k=b.lean,l=b.limit,m=parseLeanFactory(b);return a.updateMany(c,d).then(function mergeUpdateAndDocs(b){return Promise.all([Promise.resolve(b),a.find(c,e).populate(f).select(g).sort(h).lean(k).limit(l).orFail().then(m)])}).then(i).catch(j)}var d=a.runUpdateTransaction,e=a.customLabels,f=e.docs,g=e.acknowledged,h=e.modifiedCount,i=function(a){var b,c,d=_slicedToArray(a,2),e=d[0],i=d[1];return{[f]:i,[g]:null===(b=e.acknowledged)||void 0===b||b,[h]:null!==(c=e.modifiedCount)&&void 0!==c?c:e.nModified}},j=toBreadErrorFactory({[f]:[],[g]:!1,[h]:0});return function(a){return d?b(this,a):c(this,a)}}module.exports=editFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,