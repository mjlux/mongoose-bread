"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _iterableToArray(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return(b=_toPropertyKey(b))in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"==typeof b?b:b+""}function _toPrimitive(a,b){if("object"!=typeof a||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=typeof d)return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}var _require=require("mongoose-paginate-v2"),PaginationParameters=_require.PaginationParameters,_require2=require("../Parser"),parseSelect=_require2.parseSelect,parseQuery=_require2.parseQuery,parseProjection=_require2.parseProjection,parseLimit=_require2.parseLimit,parseRequestParamsId=_require2.parseRequestParamsId,parseEditRequestBody=_require2.parseEditRequestBody,parseAddRequestBody=_require2.parseAddRequestBody,parseRequestBodyIds=_require2.parseRequestBodyIds,parseRequestUserIdPath=_require2.parseRequestUserIdPath;function convertStringToBoolean(a){return!("string"!=typeof a)&&("true"===a||"1"===a)}function Factory(a,b){function c(a){var c,d,e=(null===(c=a.__breadSoftDeleteHelperOptions)||void 0===c?void 0:c.issuer)||"createReadOptions",f=(null===(d=a.__breadSoftDeleteHelperOptions)||void 0===d?void 0:d.customFind)||"findOne",g=parseRequestParamsId(a,b,{issuer:e}),h=parseSelect(a.query||{});return{query:{_id:g},select:h,customFind:f}}function d(c){var d,e=Object.assign({},b,c.__breadSoftDeleteHelperOptions),f=c.query?_objectSpread({},c.query):{},g={query:_objectSpread(_objectSpread(_objectSpread({},e),f),{},{limit:parseLimit(f,e),query:parseQuery(f,e,a),projection:parseProjection(f,e),options:null===(d=c.query)||void 0===d?void 0:d.options})};delete g.query.options;var h=new PaginationParameters(g),i=h.getQuery(),j=h.getOptions();return j.customFind=e.customFind||"find",j.customCount=e.customCount||!1,j.leanWithout_id=f.leanWithout_id?convertStringToBoolean(f.leanWithout_id):e.leanWithout_id,{query:i,paginateOptions:j}}function e(a){var c=parseRequestParamsId(a,b,{issuer:"createEditOptions"});return{payload:a.body,query:{_id:c}}}function f(a){var c=parseRequestBodyIds(a,b,{issuer:"createEditOptions"}),d=parseEditRequestBody(a,b,{issuer:"createEditOptions"});return{bulk:!0,payload:d,query:{_id:{$in:_toConsumableArray(c)}}}}function g(a){var b=a.body;return{payload:b}}function h(a){var c=parseAddRequestBody(a,b,{issuer:"createAddOptions"});return{bulk:!0,payload:c}}function i(a){var c=parseRequestParamsId(a,b,{issuer:"createDeleteOptions"}),d=b.softDelete,e=b.softDeleteOptions,f=e.deletedBy,g=e.requestUserIdPath,h=d&&f&&g?parseRequestUserIdPath(a,{requestUserIdPath:g}):null;return{query:{_id:c},userId:h}}function j(a){var c=b.softDelete,d=b.softDeleteOptions,e=d.deletedBy,f=d.requestUserIdPath,g=parseRequestBodyIds(a,b,{issuer:"createDeleteOptions"}),h=c&&e&&f?parseRequestUserIdPath(a,{requestUserIdPath:f}):null;return{bulk:!0,userId:h,query:{_id:{$in:_toConsumableArray(g)}}}}function k(a){var c=parseRequestParamsId(a,b,{issuer:"createRehabilitateOptions"});return{query:{_id:c,deleted:!0}}}function l(a){var c=parseRequestBodyIds(a,b,{issuer:"createRehabilitateOptions"});return{bulk:!0,query:{_id:{$in:_toConsumableArray(c)},deleted:!0}}}var m={createBrowseOptions(a){var b=d(a);return b},createReadOptions(a){var b=this.createBrowseOptions(a),d=b.paginateOptions,e=c(a);return _objectSpread(_objectSpread({},d),e)},createEditOptions(a){var c=this.createBrowseOptions(a),d=c.paginateOptions,g=b.paramsIdKey,h=a.params&&a.params[g]?e(a):f(a);return _objectSpread(_objectSpread({},d),h)},createAddOptions(a){var c=b.bulkDocsKey,d=this.createBrowseOptions(a),e=d.paginateOptions,f=Object.hasOwnProperty.call(a.body,c)?h(a):g(a);return _objectSpread(_objectSpread({},e),f)},createDeleteOptions(a){var c=b.paramsIdKey,d=this.createBrowseOptions(a),e=d.paginateOptions,f=a.params&&a.params[c]?i(a):j(a);return _objectSpread(_objectSpread({},e),f)}};if(!b.softDelete)return m;var n=_objectSpread(_objectSpread({},m),{},{createBrowseDeletedOptions(a){a.__breadSoftDeleteHelperOptions={customFind:"findDeleted",customCount:"countDocumentsDeleted",issuer:"createBrowseDeletedOptions"};var b=this.createBrowseOptions(a);return delete a.__breadSoftDeleteHelperOptions,b},createReadDeletedOptions(a){a.__breadSoftDeleteHelperOptions={customFind:"findOneDeleted",customCount:"countDocumentsDeleted",issuer:"createReadDeletedOptions"};var b=this.createReadOptions(a);return delete a.__breadSoftDeleteHelperOptions,b},createRehabilitateOptions(a){var c=b.paramsIdKey,d=this.createBrowseOptions(a),e=d.paginateOptions,f=a.params&&a.params[c]?k(a):l(a);return _objectSpread(_objectSpread({},e),f)}});return n}module.exports=Factory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,